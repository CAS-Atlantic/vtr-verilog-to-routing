[INF:CM0023] Creating log file ../../build/regression/LetExpr/slpp_all/surelog.log.

LIB:  work
FILE: dut.sv
n<> u<0> t<Null_rule> p<171> s<170> l<2:1> el<1:2>
n<> u<1> t<Module_keyword> p<5> s<2> l<2:1> el<2:7>
n<m> u<2> t<StringConst> p<5> s<4> l<2:8> el<2:9>
n<> u<3> t<Port> p<4> l<2:25> el<2:25>
n<> u<4> t<List_of_ports> p<5> c<3> l<2:9> el<2:26>
n<> u<5> t<Module_nonansi_header> p<168> c<1> s<18> l<2:1> el<2:27>
n<> u<6> t<IntVec_TypeLogic> p<7> l<3:1> el<3:6>
n<> u<7> t<Data_type> p<11> c<6> s<10> l<3:1> el<3:6>
n<a> u<8> t<StringConst> p<9> l<3:7> el<3:8>
n<> u<9> t<Variable_decl_assignment> p<10> c<8> l<3:7> el<3:8>
n<> u<10> t<List_of_variable_decl_assignments> p<11> c<9> l<3:7> el<3:8>
n<> u<11> t<Variable_declaration> p<12> c<7> l<3:1> el<3:9>
n<> u<12> t<Data_declaration> p<13> c<11> l<3:1> el<3:9>
n<> u<13> t<Package_or_generate_item_declaration> p<14> c<12> l<3:1> el<3:9>
n<> u<14> t<Module_or_generate_item_declaration> p<15> c<13> l<3:1> el<3:9>
n<> u<15> t<Module_common_item> p<16> c<14> l<3:1> el<3:9>
n<> u<16> t<Module_or_generate_item> p<17> c<15> l<3:1> el<3:9>
n<> u<17> t<Non_port_module_item> p<18> c<16> l<3:1> el<3:9>
n<> u<18> t<Module_item> p<168> c<17> s<42> l<3:1> el<3:9>
n<p1> u<19> t<StringConst> p<35> s<24> l<4:5> el<4:7>
n<> u<20> t<Data_type_or_implicit> p<21> l<4:8> el<4:8>
n<> u<21> t<Let_formal_type> p<23> c<20> s<22> l<4:8> el<4:8>
n<x> u<22> t<StringConst> p<23> l<4:8> el<4:9>
n<> u<23> t<Let_port_item> p<24> c<21> l<4:8> el<4:9>
n<> u<24> t<Let_port_list> p<35> c<23> s<34> l<4:8> el<4:9>
n<> u<25> t<Dollar_keyword> p<32> s<26> l<4:13> el<4:14>
n<past> u<26> t<StringConst> p<32> s<31> l<4:14> el<4:18>
n<x> u<27> t<StringConst> p<28> l<4:19> el<4:20>
n<> u<28> t<Primary_literal> p<29> c<27> l<4:19> el<4:20>
n<> u<29> t<Primary> p<30> c<28> l<4:19> el<4:20>
n<> u<30> t<Expression> p<31> c<29> l<4:19> el<4:20>
n<> u<31> t<List_of_arguments> p<32> c<30> l<4:19> el<4:20>
n<> u<32> t<Complex_func_call> p<33> c<25> l<4:13> el<4:21>
n<> u<33> t<Primary> p<34> c<32> l<4:13> el<4:21>
n<> u<34> t<Expression> p<35> c<33> l<4:13> el<4:21>
n<> u<35> t<Let_declaration> p<36> c<19> l<4:1> el<4:22>
n<> u<36> t<Assertion_item_declaration> p<37> c<35> l<4:1> el<4:22>
n<> u<37> t<Package_or_generate_item_declaration> p<38> c<36> l<4:1> el<4:22>
n<> u<38> t<Module_or_generate_item_declaration> p<39> c<37> l<4:1> el<4:22>
n<> u<39> t<Module_common_item> p<40> c<38> l<4:1> el<4:22>
n<> u<40> t<Module_or_generate_item> p<41> c<39> l<4:1> el<4:22>
n<> u<41> t<Non_port_module_item> p<42> c<40> l<4:1> el<4:22>
n<> u<42> t<Module_item> p<168> c<41> s<75> l<4:1> el<4:22>
n<p2> u<43> t<StringConst> p<68> s<48> l<6:5> el<6:7>
n<> u<44> t<Data_type_or_implicit> p<45> l<6:8> el<6:8>
n<> u<45> t<Let_formal_type> p<47> c<44> s<46> l<6:8> el<6:8>
n<x> u<46> t<StringConst> p<47> l<6:8> el<6:9>
n<> u<47> t<Let_port_item> p<48> c<45> l<6:8> el<6:9>
n<> u<48> t<Let_port_list> p<68> c<47> s<67> l<6:8> el<6:9>
n<$past> u<49> t<StringConst> p<50> l<6:14> el<6:18>
n<> u<50> t<System_task_names> p<65> c<49> s<57> l<6:13> el<6:18>
n<x> u<51> t<StringConst> p<52> l<6:19> el<6:20>
n<> u<52> t<Primary_literal> p<53> c<51> l<6:19> el<6:20>
n<> u<53> t<Primary> p<54> c<52> l<6:19> el<6:20>
n<> u<54> t<Expression> p<57> c<53> s<55> l<6:19> el<6:20>
n<> u<55> t<Argument> p<57> s<56> l<6:21> el<6:21>
n<> u<56> t<Argument> p<57> l<6:22> el<6:22>
n<> u<57> t<List_of_arguments> p<65> c<54> s<64> l<6:19> el<6:22>
n<> u<58> t<Edge_Posedge> p<63> s<62> l<6:25> el<6:32>
n<clock> u<59> t<StringConst> p<60> l<6:33> el<6:38>
n<> u<60> t<Primary_literal> p<61> c<59> l<6:33> el<6:38>
n<> u<61> t<Primary> p<62> c<60> l<6:33> el<6:38>
n<> u<62> t<Expression> p<63> c<61> l<6:33> el<6:38>
n<> u<63> t<Event_expression> p<64> c<58> l<6:25> el<6:38>
n<> u<64> t<Clocking_event> p<65> c<63> l<6:23> el<6:39>
n<> u<65> t<System_task> p<66> c<50> l<6:13> el<6:40>
n<> u<66> t<Primary> p<67> c<65> l<6:13> el<6:40>
n<> u<67> t<Expression> p<68> c<66> l<6:13> el<6:40>
n<> u<68> t<Let_declaration> p<69> c<43> l<6:1> el<6:41>
n<> u<69> t<Assertion_item_declaration> p<70> c<68> l<6:1> el<6:41>
n<> u<70> t<Package_or_generate_item_declaration> p<71> c<69> l<6:1> el<6:41>
n<> u<71> t<Module_or_generate_item_declaration> p<72> c<70> l<6:1> el<6:41>
n<> u<72> t<Module_common_item> p<73> c<71> l<6:1> el<6:41>
n<> u<73> t<Module_or_generate_item> p<74> c<72> l<6:1> el<6:41>
n<> u<74> t<Non_port_module_item> p<75> c<73> l<6:1> el<6:41>
n<> u<75> t<Module_item> p<168> c<74> s<99> l<6:1> el<6:41>
n<s> u<76> t<StringConst> p<92> s<81> l<7:5> el<7:6>
n<> u<77> t<Data_type_or_implicit> p<78> l<7:7> el<7:7>
n<> u<78> t<Let_formal_type> p<80> c<77> s<79> l<7:7> el<7:7>
n<x> u<79> t<StringConst> p<80> l<7:7> el<7:8>
n<> u<80> t<Let_port_item> p<81> c<78> l<7:7> el<7:8>
n<> u<81> t<Let_port_list> p<92> c<80> s<91> l<7:7> el<7:8>
n<> u<82> t<Dollar_keyword> p<89> s<83> l<7:12> el<7:13>
n<sampled> u<83> t<StringConst> p<89> s<88> l<7:13> el<7:20>
n<x> u<84> t<StringConst> p<85> l<7:21> el<7:22>
n<> u<85> t<Primary_literal> p<86> c<84> l<7:21> el<7:22>
n<> u<86> t<Primary> p<87> c<85> l<7:21> el<7:22>
n<> u<87> t<Expression> p<88> c<86> l<7:21> el<7:22>
n<> u<88> t<List_of_arguments> p<89> c<87> l<7:21> el<7:22>
n<> u<89> t<Complex_func_call> p<90> c<82> l<7:12> el<7:23>
n<> u<90> t<Primary> p<91> c<89> l<7:12> el<7:23>
n<> u<91> t<Expression> p<92> c<90> l<7:12> el<7:23>
n<> u<92> t<Let_declaration> p<93> c<76> l<7:1> el<7:24>
n<> u<93> t<Assertion_item_declaration> p<94> c<92> l<7:1> el<7:24>
n<> u<94> t<Package_or_generate_item_declaration> p<95> c<93> l<7:1> el<7:24>
n<> u<95> t<Module_or_generate_item_declaration> p<96> c<94> l<7:1> el<7:24>
n<> u<96> t<Module_common_item> p<97> c<95> l<7:1> el<7:24>
n<> u<97> t<Module_or_generate_item> p<98> c<96> l<7:1> el<7:24>
n<> u<98> t<Non_port_module_item> p<99> c<97> l<7:1> el<7:24>
n<> u<99> t<Module_item> p<168> c<98> s<166> l<7:1> el<7:24>
n<> u<100> t<AlwaysKeywd_Comb> p<162> s<161> l<9:1> el<9:12>
n<a1> u<101> t<StringConst> p<118> s<117> l<10:1> el<10:3>
n<p1> u<102> t<StringConst> p<108> s<107> l<10:12> el<10:14>
n<a> u<103> t<StringConst> p<104> l<10:15> el<10:16>
n<> u<104> t<Primary_literal> p<105> c<103> l<10:15> el<10:16>
n<> u<105> t<Primary> p<106> c<104> l<10:15> el<10:16>
n<> u<106> t<Expression> p<107> c<105> l<10:15> el<10:16>
n<> u<107> t<List_of_arguments> p<108> c<106> l<10:15> el<10:16>
n<> u<108> t<Complex_func_call> p<109> c<102> l<10:12> el<10:17>
n<> u<109> t<Primary> p<110> c<108> l<10:12> el<10:17>
n<> u<110> t<Expression> p<113> c<109> s<112> l<10:12> el<10:17>
n<> u<111> t<Statement_or_null> p<112> l<10:18> el<10:19>
n<> u<112> t<Action_block> p<113> c<111> l<10:18> el<10:19>
n<> u<113> t<Simple_immediate_assert_statement> p<114> c<110> l<10:5> el<10:19>
n<> u<114> t<Simple_immediate_assertion_statement> p<115> c<113> l<10:5> el<10:19>
n<> u<115> t<Immediate_assertion_statement> p<116> c<114> l<10:5> el<10:19>
n<> u<116> t<Procedural_assertion_statement> p<117> c<115> l<10:5> el<10:19>
n<> u<117> t<Statement_item> p<118> c<116> l<10:5> el<10:19>
n<> u<118> t<Statement> p<119> c<101> l<10:1> el<10:19>
n<> u<119> t<Statement_or_null> p<159> c<118> s<138> l<10:1> el<10:19>
n<a2> u<120> t<StringConst> p<137> s<136> l<11:1> el<11:3>
n<p2> u<121> t<StringConst> p<127> s<126> l<11:12> el<11:14>
n<a> u<122> t<StringConst> p<123> l<11:15> el<11:16>
n<> u<123> t<Primary_literal> p<124> c<122> l<11:15> el<11:16>
n<> u<124> t<Primary> p<125> c<123> l<11:15> el<11:16>
n<> u<125> t<Expression> p<126> c<124> l<11:15> el<11:16>
n<> u<126> t<List_of_arguments> p<127> c<125> l<11:15> el<11:16>
n<> u<127> t<Complex_func_call> p<128> c<121> l<11:12> el<11:17>
n<> u<128> t<Primary> p<129> c<127> l<11:12> el<11:17>
n<> u<129> t<Expression> p<132> c<128> s<131> l<11:12> el<11:17>
n<> u<130> t<Statement_or_null> p<131> l<11:18> el<11:19>
n<> u<131> t<Action_block> p<132> c<130> l<11:18> el<11:19>
n<> u<132> t<Simple_immediate_assert_statement> p<133> c<129> l<11:5> el<11:19>
n<> u<133> t<Simple_immediate_assertion_statement> p<134> c<132> l<11:5> el<11:19>
n<> u<134> t<Immediate_assertion_statement> p<135> c<133> l<11:5> el<11:19>
n<> u<135> t<Procedural_assertion_statement> p<136> c<134> l<11:5> el<11:19>
n<> u<136> t<Statement_item> p<137> c<135> l<11:5> el<11:19>
n<> u<137> t<Statement> p<138> c<120> l<11:1> el<11:19>
n<> u<138> t<Statement_or_null> p<159> c<137> s<157> l<11:1> el<11:19>
n<a3> u<139> t<StringConst> p<156> s<155> l<12:1> el<12:3>
n<s> u<140> t<StringConst> p<146> s<145> l<12:12> el<12:13>
n<a> u<141> t<StringConst> p<142> l<12:14> el<12:15>
n<> u<142> t<Primary_literal> p<143> c<141> l<12:14> el<12:15>
n<> u<143> t<Primary> p<144> c<142> l<12:14> el<12:15>
n<> u<144> t<Expression> p<145> c<143> l<12:14> el<12:15>
n<> u<145> t<List_of_arguments> p<146> c<144> l<12:14> el<12:15>
n<> u<146> t<Complex_func_call> p<147> c<140> l<12:12> el<12:16>
n<> u<147> t<Primary> p<148> c<146> l<12:12> el<12:16>
n<> u<148> t<Expression> p<151> c<147> s<150> l<12:12> el<12:16>
n<> u<149> t<Statement_or_null> p<150> l<12:17> el<12:18>
n<> u<150> t<Action_block> p<151> c<149> l<12:17> el<12:18>
n<> u<151> t<Simple_immediate_assert_statement> p<152> c<148> l<12:5> el<12:18>
n<> u<152> t<Simple_immediate_assertion_statement> p<153> c<151> l<12:5> el<12:18>
n<> u<153> t<Immediate_assertion_statement> p<154> c<152> l<12:5> el<12:18>
n<> u<154> t<Procedural_assertion_statement> p<155> c<153> l<12:5> el<12:18>
n<> u<155> t<Statement_item> p<156> c<154> l<12:5> el<12:18>
n<> u<156> t<Statement> p<157> c<139> l<12:1> el<12:18>
n<> u<157> t<Statement_or_null> p<159> c<156> s<158> l<12:1> el<12:18>
n<> u<158> t<End> p<159> l<13:1> el<13:4>
n<> u<159> t<Seq_block> p<160> c<119> l<9:13> el<13:4>
n<> u<160> t<Statement_item> p<161> c<159> l<9:13> el<13:4>
n<> u<161> t<Statement> p<162> c<160> l<9:13> el<13:4>
n<> u<162> t<Always_construct> p<163> c<100> l<9:1> el<13:4>
n<> u<163> t<Module_common_item> p<164> c<162> l<9:1> el<13:4>
n<> u<164> t<Module_or_generate_item> p<165> c<163> l<9:1> el<13:4>
n<> u<165> t<Non_port_module_item> p<166> c<164> l<9:1> el<13:4>
n<> u<166> t<Module_item> p<168> c<165> s<167> l<9:1> el<13:4>
n<m> u<167> t<StringConst> p<168> l<16:13> el<16:14>
n<> u<168> t<Module_declaration> p<169> c<5> l<2:1> el<16:14>
n<> u<169> t<Description> p<170> c<168> l<2:1> el<16:14>
n<> u<170> t<Source_text> p<171> c<169> l<2:1> el<16:14>
n<> u<171> t<Top_level_rule> l<2:1> el<16:14>
[WRN:PA0205] dut.sv:2: No timescale set for "m".

[INF:CP0300] Compilation...

[INF:CP0303] dut.sv:2: Compile module "work@m".

[INF:EL0526] Design Elaboration...

[NTE:EL0503] dut.sv:2: Top level module "work@m".

[NTE:EL0508] Nb Top level modules: 1.

[NTE:EL0509] Max instance depth: 1.

[NTE:EL0510] Nb instances: 1.

[NTE:EL0511] Nb leaf instances: 0.

[INF:UH0706] Creating UHDM Model...

[INF:UH0707] Elaborating UHDM...

[INF:UH0708] Writing UHDM DB: ../../build/regression/LetExpr/slpp_all/surelog.uhdm ...

[INF:UH0709] Writing UHDM Html Coverage: ../../build/regression/LetExpr/slpp_all/surelog.uhdm.chk.html ...

[INF:UH0710] Loading UHDM DB: ../../build/regression/LetExpr/slpp_all/surelog.uhdm ...

[INF:UH0711] Decompiling UHDM...

====== UHDM =======
design: (work@m)
|vpiElaborated:1
|vpiName:work@m
|uhdmallModules:
\_module: work@m (work@m) dut.sv:2:1: , endln:16:14, parent:work@m
  |vpiFullName:work@m
  |vpiLetDecl:
  \_let_decl: (p1), line:4:1, endln:4:22
    |vpiExpr:
    \_sys_func_call: ($past), line:4:13, endln:4:21
      |vpiArgument:
      \_ref_obj: (x), line:4:19, endln:4:20, parent:$past
        |vpiName:x
        |vpiActual:
        \_logic_net: (x)
          |vpiName:x
          |vpiNetType:1
      |vpiName:$past
    |vpiName:p1
  |vpiLetDecl:
  \_let_decl: (p2), line:6:1, endln:6:41
    |vpiExpr:
    \_sys_func_call: ($past), line:6:13, endln:6:18
      |vpiArgument:
      \_ref_obj: (x), line:6:19, endln:6:20, parent:$past
        |vpiName:x
        |vpiActual:
        \_logic_net: (x)
      |vpiArgument:
      \_constant: , line:6:21, endln:6:21
        |vpiDecompile:0
        |vpiSize:64
        |INT:0
        |vpiConstType:7
      |vpiArgument:
      \_constant: , line:6:22, endln:6:22
        |vpiDecompile:0
        |vpiSize:64
        |INT:0
        |vpiConstType:7
      |vpiArgument:
      \_operation: , line:6:25, endln:6:38, parent:$past
        |vpiOpType:39
        |vpiOperand:
        \_ref_obj: (clock), line:6:33, endln:6:38
          |vpiName:clock
          |vpiActual:
          \_logic_net: (clock)
            |vpiName:clock
            |vpiNetType:1
      |vpiName:$past
    |vpiName:p2
  |vpiLetDecl:
  \_let_decl: (s), line:7:1, endln:7:24
    |vpiExpr:
    \_sys_func_call: ($sampled), line:7:12, endln:7:23
      |vpiArgument:
      \_ref_obj: (x), line:7:21, endln:7:22, parent:$sampled
        |vpiName:x
        |vpiActual:
        \_logic_net: (x)
      |vpiName:$sampled
    |vpiName:s
  |vpiDefName:work@m
  |vpiNet:
  \_logic_net: (work@m.a), line:3:7, endln:3:8, parent:work@m
    |vpiName:a
    |vpiFullName:work@m.a
    |vpiNetType:36
  |vpiProcess:
  \_always: , line:9:1, endln:13:4, parent:work@m
    |vpiStmt:
    \_begin: (work@m), line:9:13, endln:13:4
      |vpiFullName:work@m
      |vpiStmt:
      \_immediate_assert: (a1), line:10:1, endln:10:19, parent:work@m
        |vpiName:a1
        |vpiExpr:
        \_let_expr: , line:10:12, endln:10:17, parent:a1
          |vpiArgument:
          \_ref_obj: (a), line:10:15, endln:10:16
            |vpiName:a
            |vpiActual:
            \_logic_var: (work@m.a), line:3:7, endln:3:8, parent:work@m
              |vpiTypespec:
              \_logic_typespec: , line:3:1, endln:3:6
              |vpiName:a
              |vpiFullName:work@m.a
              |vpiVisibility:1
          |vpiLetDecl:
          \_let_decl: (p1), line:4:1, endln:4:22
      |vpiStmt:
      \_immediate_assert: (a2), line:11:1, endln:11:19, parent:work@m
        |vpiName:a2
        |vpiExpr:
        \_let_expr: , line:11:12, endln:11:17, parent:a2
          |vpiArgument:
          \_ref_obj: (a), line:11:15, endln:11:16
            |vpiName:a
            |vpiActual:
            \_logic_var: (work@m.a), line:3:7, endln:3:8, parent:work@m
          |vpiLetDecl:
          \_let_decl: (p2), line:6:1, endln:6:41
      |vpiStmt:
      \_immediate_assert: (a3), line:12:1, endln:12:18, parent:work@m
        |vpiName:a3
        |vpiExpr:
        \_let_expr: , line:12:12, endln:12:16, parent:a3
          |vpiArgument:
          \_ref_obj: (a), line:12:14, endln:12:15
            |vpiName:a
            |vpiActual:
            \_logic_var: (work@m.a), line:3:7, endln:3:8, parent:work@m
          |vpiLetDecl:
          \_let_decl: (s), line:7:1, endln:7:24
    |vpiAlwaysType:2
|uhdmtopModules:
\_module: work@m (work@m) dut.sv:2:1: , endln:16:14
  |vpiName:work@m
  |vpiVariables:
  \_logic_var: (work@m.a), line:3:7, endln:3:8, parent:work@m
  |vpiLetDecl:
  \_let_decl: (p1), line:4:1, endln:4:22, parent:work@m
    |vpiExpr:
    \_sys_func_call: ($past), line:4:13, endln:4:21, parent:p1
      |vpiArgument:
      \_ref_obj: (work@m.p1.x), line:4:19, endln:4:20, parent:$past
        |vpiName:x
        |vpiFullName:work@m.p1.x
        |vpiActual:
        \_logic_net: (x)
      |vpiName:$past
    |vpiName:p1
  |vpiLetDecl:
  \_let_decl: (p2), line:6:1, endln:6:41, parent:work@m
    |vpiExpr:
    \_sys_func_call: ($past), line:6:13, endln:6:18, parent:p2
      |vpiArgument:
      \_ref_obj: (work@m.p2.x), line:6:19, endln:6:20, parent:$past
        |vpiName:x
        |vpiFullName:work@m.p2.x
        |vpiActual:
        \_logic_net: (x)
      |vpiArgument:
      \_constant: , line:6:21, endln:6:21
      |vpiArgument:
      \_constant: , line:6:22, endln:6:22
      |vpiArgument:
      \_operation: , line:6:25, endln:6:38, parent:$past
        |vpiOpType:39
        |vpiOperand:
        \_ref_obj: (work@m.p2.clock), line:6:33, endln:6:38
          |vpiName:clock
          |vpiFullName:work@m.p2.clock
          |vpiActual:
          \_logic_net: (clock)
      |vpiName:$past
    |vpiName:p2
  |vpiLetDecl:
  \_let_decl: (s), line:7:1, endln:7:24, parent:work@m
    |vpiExpr:
    \_sys_func_call: ($sampled), line:7:12, endln:7:23, parent:s
      |vpiArgument:
      \_ref_obj: (work@m.s.x), line:7:21, endln:7:22, parent:$sampled
        |vpiName:x
        |vpiFullName:work@m.s.x
        |vpiActual:
        \_logic_net: (x)
      |vpiName:$sampled
    |vpiName:s
  |vpiDefName:work@m
  |vpiTop:1
  |vpiNet:
  \_logic_net: (x)
  |vpiNet:
  \_logic_net: (clock)
  |vpiTopModule:1
  |vpiProcess:
  \_always: , line:9:1, endln:13:4, parent:work@m
    |vpiStmt:
    \_begin: (work@m), line:9:13, endln:13:4
      |vpiFullName:work@m
      |vpiStmt:
      \_immediate_assert: (a1), line:10:1, endln:10:19, parent:work@m
        |vpiName:a1
        |vpiExpr:
        \_let_expr: , line:10:12, endln:10:17, parent:a1
          |vpiArgument:
          \_ref_obj: (work@m.a1.a), line:10:15, endln:10:16
            |vpiName:a
            |vpiFullName:work@m.a1.a
            |vpiActual:
            \_logic_var: (work@m.a), line:3:7, endln:3:8, parent:work@m
          |vpiLetDecl:
          \_let_decl: (p1), line:4:1, endln:4:22
            |vpiExpr:
            \_sys_func_call: ($past), line:4:13, endln:4:21, parent:p1
              |vpiArgument:
              \_ref_obj: (work@m.a1.p1.x), line:4:19, endln:4:20, parent:$past
                |vpiName:x
                |vpiFullName:work@m.a1.p1.x
                |vpiActual:
                \_logic_net: (x)
              |vpiName:$past
            |vpiName:p1
      |vpiStmt:
      \_immediate_assert: (a2), line:11:1, endln:11:19, parent:work@m
        |vpiName:a2
        |vpiExpr:
        \_let_expr: , line:11:12, endln:11:17, parent:a2
          |vpiArgument:
          \_ref_obj: (work@m.a2.a), line:11:15, endln:11:16
            |vpiName:a
            |vpiFullName:work@m.a2.a
            |vpiActual:
            \_logic_var: (work@m.a), line:3:7, endln:3:8, parent:work@m
          |vpiLetDecl:
          \_let_decl: (p2), line:6:1, endln:6:41
            |vpiExpr:
            \_sys_func_call: ($past), line:6:13, endln:6:18, parent:p2
              |vpiArgument:
              \_ref_obj: (work@m.a2.p2.x), line:6:19, endln:6:20, parent:$past
                |vpiName:x
                |vpiFullName:work@m.a2.p2.x
                |vpiActual:
                \_logic_net: (x)
              |vpiArgument:
              \_constant: , line:6:21, endln:6:21
              |vpiArgument:
              \_constant: , line:6:22, endln:6:22
              |vpiArgument:
              \_operation: , line:6:25, endln:6:38, parent:$past
                |vpiOpType:39
                |vpiOperand:
                \_ref_obj: (work@m.a2.p2.clock), line:6:33, endln:6:38
                  |vpiName:clock
                  |vpiFullName:work@m.a2.p2.clock
                  |vpiActual:
                  \_logic_net: (clock)
              |vpiName:$past
            |vpiName:p2
      |vpiStmt:
      \_immediate_assert: (a3), line:12:1, endln:12:18, parent:work@m
        |vpiName:a3
        |vpiExpr:
        \_let_expr: , line:12:12, endln:12:16, parent:a3
          |vpiArgument:
          \_ref_obj: (work@m.a3.a), line:12:14, endln:12:15
            |vpiName:a
            |vpiFullName:work@m.a3.a
            |vpiActual:
            \_logic_var: (work@m.a), line:3:7, endln:3:8, parent:work@m
          |vpiLetDecl:
          \_let_decl: (s), line:7:1, endln:7:24
            |vpiExpr:
            \_sys_func_call: ($sampled), line:7:12, endln:7:23, parent:s
              |vpiArgument:
              \_ref_obj: (work@m.a3.s.x), line:7:21, endln:7:22, parent:$sampled
                |vpiName:x
                |vpiFullName:work@m.a3.s.x
                |vpiActual:
                \_logic_net: (x)
              |vpiName:$sampled
            |vpiName:s
    |vpiAlwaysType:2
===================
[  FATAL] : 0
[ SYNTAX] : 0
[  ERROR] : 0
[WARNING] : 1
[   NOTE] : 5


[roundtrip]: ${SURELOG_DIR}/tests/LetExpr/dut.sv | ${SURELOG_DIR}/build/regression/LetExpr/roundtrip/dut_000.sv | 7 | 16 | 

